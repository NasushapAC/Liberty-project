{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\React\\\\libertys\\\\src\\\\page\\\\auction\\\\dropzone\\\\DropZone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./Dropzone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropZone = () => {\n  _s();\n\n  const fileInputRef = useRef();\n  const modalImageRef = useRef();\n  const modalRef = useRef();\n  const progressRef = useRef();\n  const uploadRef = useRef();\n  const uploadModalRef = useRef();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    let filteredArr = selectedFiles.reduce((acc, current) => {\n      const x = acc.find(item => item.name === current.name);\n\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    setValidFiles([...filteredArr]);\n  }, [selectedFiles]);\n\n  const preventDefault = e => {\n    e.preventDefault(); // e.stopPropagation();\n  };\n\n  const dragOver = e => {\n    preventDefault(e);\n  };\n\n  const dragEnter = e => {\n    preventDefault(e);\n  };\n\n  const dragLeave = e => {\n    preventDefault(e);\n  };\n\n  const fileDrop = e => {\n    preventDefault(e);\n    const files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const filesSelecteds = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        setSelectedFiles(prevArray => [...prevArray, files[i]]);\n      } else {\n        files[i][\"invalid\"] = true;\n        setSelectedFiles(prevArray => [...prevArray, files[i]]);\n        setErrorMessage(\"File type not permitted\");\n        setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n      }\n    }\n  };\n\n  const validateFile = file => {\n    const validTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\", \"image/gif\", \"image/x-icon\"];\n\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const fileSize = size => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) || fileName;\n  };\n\n  const removeFile = name => {\n    const index = validFiles.findIndex(e => e.name === name);\n    const index2 = selectedFiles.findIndex(e => e.name === name);\n    const index3 = unsupportedFiles.findIndex(e => e.name === name);\n    validFiles.splice(index, 1);\n    selectedFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectedFiles([...selectedFiles]);\n\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  const openImageModal = file => {\n    const reader = new FileReader();\n    modalRef.current.style.display = \"block\";\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\n    };\n  };\n\n  const closeModal = () => {\n    modalRef.current.style.display = \"none\";\n    modalImageRef.current.style.backgroundImage = \"none\";\n  };\n\n  const uploadFiles = async () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"image\", validFiles[i]);\n      formData.append(\"key\", \"\");\n      axios.post(\"https://api.imgbb.com/1/upload\", formData, {\n        onUploadProgress: progressEvent => {\n          const uploadPercentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);\n          progressRef.current.innerHTML = `${uploadPercentage}%`;\n          progressRef.current.style.width = `${uploadPercentage}%`;\n\n          if (uploadPercentage === 100) {\n            uploadRef.current.innerHTML = \"File(s) Uploaded\";\n            validFiles.length = 0;\n            setValidFiles([...validFiles]);\n            setSelectedFiles([...validFiles]);\n            setUnsupportedFiles([...validFiles]);\n          }\n        }\n      }).catch(() => {\n        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n        progressRef.current.style.backgroundColor = \"red\";\n      });\n    }\n  };\n\n  const closeUploadModal = () => {\n    uploadModalRef.current.style.display = \"none\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dp-container\",\n      children: [unsupportedFiles.length === 0 && validFiles.length ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"file-upload-btn hb-btn-custom\",\n        onClick: () => uploadFiles()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this) : \"\", unsupportedFiles.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please remove all unsupported files.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-container pb-5\",\n        onDragOver: dragOver,\n        onDragEnter: dragEnter,\n        onDragLeave: dragLeave,\n        onDrop: fileDrop,\n        onClick: fileInputClicked,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), \"Drag and drop files here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          className: \"file-input\",\n          type: \"file\",\n          multiple: true,\n          onChange: filesSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          className: \"file-input\",\n          type: \"file\",\n          multiple: true,\n          onChange: filesSelected // style={{ height: \"50px\", width: \"50px\", backgroundColor: \"blue\" }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-display-container\",\n        children: validFiles.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-status-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: !data.invalid ? () => openImageModal(data) : () => removeFile(data.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-type-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-type\",\n              children: fileType(data.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `file-name ${data.invalid ? \"file-error\" : \"\"}`,\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-size\",\n              children: [\"(\", fileSize(data.size), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), \" \", data.invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-error-message\",\n              children: [\"(\", errorMessage, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-remove\",\n            onClick: () => removeFile(data.name),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => closeModal(),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-image\",\n        ref: modalImageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-modal\",\n      ref: uploadModalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => closeUploadModal(),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          ref: uploadRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            ref: progressRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DropZone, \"qgiO3kxk7DD3AKAiwMtmTNOF8DY=\");\n\n_c = DropZone;\nexport default DropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"sources":["E:/DEV/React/libertys/src/page/auction/dropzone/DropZone.js"],"names":["React","useRef","useState","useEffect","axios","Button","Form","DropZone","fileInputRef","modalImageRef","modalRef","progressRef","uploadRef","uploadModalRef","selectedFiles","setSelectedFiles","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","errorMessage","setErrorMessage","filteredArr","reduce","acc","current","x","find","item","name","concat","preventDefault","e","dragOver","dragEnter","dragLeave","fileDrop","files","dataTransfer","length","handleFiles","filesSelected","filesSelecteds","fileInputClicked","click","i","validateFile","prevArray","file","validTypes","indexOf","type","fileSize","size","k","sizes","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","removeFile","index","findIndex","index2","index3","splice","openImageModal","reader","FileReader","style","display","readAsDataURL","onload","backgroundImage","target","result","closeModal","uploadFiles","innerHTML","formData","FormData","append","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","width","catch","backgroundColor","closeUploadModal","map","data","invalid"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport \"./Dropzone.css\";\r\n\r\nconst DropZone = () => {\r\n  const fileInputRef = useRef();\r\n  const modalImageRef = useRef();\r\n  const modalRef = useRef();\r\n  const progressRef = useRef();\r\n  const uploadRef = useRef();\r\n  const uploadModalRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let filteredArr = selectedFiles.reduce((acc, current) => {\r\n      const x = acc.find((item) => item.name === current.name);\r\n      if (!x) {\r\n        return acc.concat([current]);\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, []);\r\n    setValidFiles([...filteredArr]);\r\n  }, [selectedFiles]);\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault();\r\n    // e.stopPropagation();\r\n  };\r\n\r\n  const dragOver = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const dragEnter = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const dragLeave = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const fileDrop = (e) => {\r\n    preventDefault(e);\r\n    const files = e.dataTransfer.files;\r\n    if (files.length) {\r\n      handleFiles(files);\r\n    }\r\n  };\r\n\r\n  const filesSelected = () => {\r\n    if (fileInputRef.current.files.length) {\r\n      handleFiles(fileInputRef.current.files);\r\n    }\r\n  }; const filesSelecteds = () => {\r\n    if (fileInputRef.current.files.length) {\r\n      handleFiles(fileInputRef.current.files);\r\n    }\r\n  };\r\n\r\n  const fileInputClicked = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (validateFile(files[i])) {\r\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\r\n      } else {\r\n        files[i][\"invalid\"] = true;\r\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\r\n        setErrorMessage(\"File type not permitted\");\r\n        setUnsupportedFiles((prevArray) => [...prevArray, files[i]]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const validTypes = [\r\n      \"image/jpeg\",\r\n      \"image/jpg\",\r\n      \"image/png\",\r\n      \"image/gif\",\r\n      \"image/x-icon\",\r\n    ];\r\n    if (validTypes.indexOf(file.type) === -1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const fileSize = (size) => {\r\n    if (size === 0) {\r\n      return \"0 Bytes\";\r\n    }\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n    const i = Math.floor(Math.log(size) / Math.log(k));\r\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n\r\n  const fileType = (fileName) => {\r\n    return (\r\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\r\n      fileName\r\n    );\r\n  };\r\n\r\n  const removeFile = (name) => {\r\n    const index = validFiles.findIndex((e) => e.name === name);\r\n    const index2 = selectedFiles.findIndex((e) => e.name === name);\r\n    const index3 = unsupportedFiles.findIndex((e) => e.name === name);\r\n    validFiles.splice(index, 1);\r\n    selectedFiles.splice(index2, 1);\r\n    setValidFiles([...validFiles]);\r\n    setSelectedFiles([...selectedFiles]);\r\n    if (index3 !== -1) {\r\n      unsupportedFiles.splice(index3, 1);\r\n      setUnsupportedFiles([...unsupportedFiles]);\r\n    }\r\n  };\r\n\r\n  const openImageModal = (file) => {\r\n    const reader = new FileReader();\r\n    modalRef.current.style.display = \"block\";\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (e) {\r\n      modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\r\n    };\r\n  };\r\n\r\n  const closeModal = () => {\r\n    modalRef.current.style.display = \"none\";\r\n    modalImageRef.current.style.backgroundImage = \"none\";\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    uploadModalRef.current.style.display = \"block\";\r\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\r\n    for (let i = 0; i < validFiles.length; i++) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", validFiles[i]);\r\n      formData.append(\"key\", \"\");\r\n\r\n      axios\r\n        .post(\"https://api.imgbb.com/1/upload\", formData, {\r\n          onUploadProgress: (progressEvent) => {\r\n            const uploadPercentage = Math.floor(\r\n              (progressEvent.loaded / progressEvent.total) * 100\r\n            );\r\n            progressRef.current.innerHTML = `${uploadPercentage}%`;\r\n            progressRef.current.style.width = `${uploadPercentage}%`;\r\n\r\n            if (uploadPercentage === 100) {\r\n              uploadRef.current.innerHTML = \"File(s) Uploaded\";\r\n              validFiles.length = 0;\r\n              setValidFiles([...validFiles]);\r\n              setSelectedFiles([...validFiles]);\r\n              setUnsupportedFiles([...validFiles]);\r\n            }\r\n          },\r\n        })\r\n        .catch(() => {\r\n          uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\r\n          progressRef.current.style.backgroundColor = \"red\";\r\n        });\r\n    }\r\n  };\r\n\r\n  const closeUploadModal = () => {\r\n    uploadModalRef.current.style.display = \"none\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dp-container\">\r\n        {unsupportedFiles.length === 0 && validFiles.length ? (\r\n          <Button\r\n            className=\"file-upload-btn hb-btn-custom\"\r\n            onClick={() => uploadFiles()}\r\n          ></Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {unsupportedFiles.length ? (\r\n          <p>Please remove all unsupported files.</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className=\"drop-container pb-5\"\r\n          onDragOver={dragOver}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDrop={fileDrop}\r\n          onClick={fileInputClicked}\r\n        >\r\n          <div className=\"drop-message\">\r\n            <div className=\"upload-icon\"></div>\r\n            Drag and drop files here\r\n          </div>\r\n          <input\r\n            ref={fileInputRef}\r\n            className=\"file-input\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={filesSelected}\r\n          />\r\n        </div>\r\n        <div>\r\n          {/* <Form>\r\n            <Form.Group>\r\n              <Form.File\r\n                id=\"exampleFormControlFile1\"\r\n                label=\"Example file input\"\r\n              />\r\n            </Form.Group>\r\n          </Form> */}\r\n          <input\r\n            ref={fileInputRef}\r\n            className=\"file-input\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={filesSelected}\r\n            // style={{ height: \"50px\", width: \"50px\", backgroundColor: \"blue\" }}\r\n          />\r\n          {/* <div\r\n            ref={fileInputRef}\r\n            className=\"file-input\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={filesSelected}\r\n            style={{ height: \"50px\", width: \"50px\", backgroundColor: \"blue\" }}\r\n          ></div> */}\r\n        </div>\r\n        <div className=\"file-display-container\">\r\n          {validFiles.map((data, i) => (\r\n            <div className=\"file-status-bar\" key={i}>\r\n              <div\r\n                onClick={\r\n                  !data.invalid\r\n                    ? () => openImageModal(data)\r\n                    : () => removeFile(data.name)\r\n                }\r\n              >\r\n                <div className=\"file-type-logo\"></div>\r\n                <div className=\"file-type\">{fileType(data.name)}</div>\r\n                <span\r\n                  className={`file-name ${data.invalid ? \"file-error\" : \"\"}`}\r\n                >\r\n                  {data.name}\r\n                </span>\r\n                <span className=\"file-size\">({fileSize(data.size)})</span>{\" \"}\r\n                {data.invalid && (\r\n                  <span className=\"file-error-message\">({errorMessage})</span>\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"file-remove\"\r\n                onClick={() => removeFile(data.name)}\r\n              >\r\n                X\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"modal\" ref={modalRef}>\r\n        <div className=\"overlay\"></div>\r\n        <span className=\"close\" onClick={() => closeModal()}>\r\n          X\r\n        </span>\r\n        <div className=\"modal-image\" ref={modalImageRef}></div>\r\n      </div>\r\n\r\n      <div className=\"upload-modal\" ref={uploadModalRef}>\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"close\" onClick={() => closeUploadModal()}>\r\n          X\r\n        </div>\r\n        <div className=\"progress-container\">\r\n          <span ref={uploadRef}></span>\r\n          <div className=\"progress\">\r\n            <div className=\"progress-bar\" ref={progressRef}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropZone;\r\n"]},"metadata":{},"sourceType":"module"}